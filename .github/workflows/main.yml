name: FanCode SDET Tests

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        mkdir -p reports
        pytest -v --junitxml=reports/junit.xml --html=reports/report.html --self-contained-html
      continue-on-error: true

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports-${{ matrix.python-version }}
        path: reports/
        retention-days: 7

    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Tests (Python ${{ matrix.python-version }})
        path: reports/junit.xml
        reporter: java-junit
        fail-on-error: false

  docker-test:
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'  # Skip on scheduled runs
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Build and test with Docker
      run: |
        mkdir -p reports
        docker build -t fancode-sdet .
        docker run --rm -v $(pwd)/reports:/app/reports fancode-sdet || true
        
    - name: Upload Docker reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-reports
        path: reports/
        retention-days: 7