name: FanCode SDET Tests

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11']
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Install Allure CLI
        curl -o allure-commandline.tgz -Ls https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.tgz
        tar -zxf allure-commandline.tgz -C /opt/
        sudo ln -s /opt/allure-2.24.0/bin/allure /usr/bin/allure
        
    - name: Run tests
      run: |
        mkdir -p reports
        pytest -v --junitxml=reports/junit.xml --alluredir=reports/allure-results --clean-alluredir
      continue-on-error: true

    - name: Generate Allure report
      if: always()
      run: |
        allure generate reports/allure-results -o reports/allure-report --clean
      continue-on-error: true

    - name: Create compressed report archive
      if: always()
      run: |
        cd reports
        tar -czf allure-report.tar.gz allure-report/
        ls -la
      continue-on-error: true

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports-${{ matrix.python-version }}
        path: reports/
        retention-days: 7

    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Tests (Python ${{ matrix.python-version }})
        path: reports/junit.xml
        reporter: java-junit
        fail-on-error: false

  docker-test:
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'  # Skip on scheduled runs
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Build and test with Docker
      run: |
        mkdir -p reports
        docker build -t fancode-sdet .
        docker run --rm -v $(pwd)/reports:/app/reports fancode-sdet || true
        
    - name: Create Docker report archive
      if: always()
      run: |
        cd reports
        if [ -d "allure-report" ]; then
          tar -czf docker-allure-report.tar.gz allure-report/
        fi
        ls -la
      continue-on-error: true
        
    - name: Upload Docker reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-reports
        path: reports/
        retention-days: 7

  notify:
    runs-on: ubuntu-latest
    needs: [test, docker-test]
    if: always()
    steps:
      - name: Download test reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports-3.11
          path: reports/
      - name: Download docker reports
        uses: actions/download-artifact@v4
        with:
          name: docker-reports
          path: reports/docker/
        continue-on-error: true
      
      - name: List available reports
        run: |
          echo "=== Available Report Files ==="
          find reports/ -type f -name "*.tar.gz" -o -name "*.xml" -o -name "*.html" | head -20
          echo "=== End Report List ==="
      - name: Notify workflow completion
        run: |
          echo "FanCode SDET workflow completed."
          echo "Test job status: ${{ needs.test.result }}"
          echo "Docker-test job status: ${{ needs.docker-test.result }}"
      - name: Send comprehensive test report via email
        uses: dawidd6/action-send-mail@v3
        if: always()
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: FanCode SDET Comprehensive Test Results - ${{ github.run_number }}
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            üöÄ **FanCode SDET Test Execution Completed**
            
            üìä **Test Results Summary:**
            - Main Test Suite: ${{ needs.test.result }}
            - Docker Test Suite: ${{ needs.docker-test.result }}
            - Workflow: ${{ github.workflow }}
            - Branch: ${{ github.ref_name }}
            - Commit: ${{ github.sha }}
            - Run #: ${{ github.run_number }}
            
            üìà **Allure Reports Included:**
            - üìÅ allure-report.tar.gz: Main test suite Allure report
            - üìÅ docker-allure-report.tar.gz: Docker test suite Allure report (if available)
            - üìÑ junit.xml: JUnit XML for CI/CD integration
            
            üìÇ **How to View Allure Reports:**
            1. Download and extract the .tar.gz files
            2. Open allure-report/index.html in your browser
            3. Enjoy rich interactive reports with:
               - Test execution timeline
               - Test categorization and grouping
               - Detailed test steps and attachments
               - Historical trends and analytics
               - Environment information
               - Failure analysis and categorization
            
            üîó **GitHub Workflow:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            ---
            üìß Generated by GitHub Actions - FanCode SDET Assignment
            ‚è∞ Execution Time: ${{ github.event.head_commit.timestamp }}
          attachments: |
            reports/allure-report.tar.gz
            reports/junit.xml
            reports/docker/docker-allure-report.tar.gz